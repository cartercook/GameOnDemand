using System.Collections;using System.Collections.Generic;using UnityEngine;public class Controls : MonoBehaviour {    public static Controls Instance;    public Collider2D hoe;    public Collider2D seedPile;    public Collider2D wateringCan;    public Collider2D glove;    public enum Mode { gathering_seeds, tilling, planting, watering, pulling };    public static Mode mode = Mode.gathering_seeds;    void Start()    {        // singleton        Instance = this;        // distinct mouse and touch events        Input.simulateMouseWithTouches = false;    }    		// Update is called once per frame	void Update ()    {        if (Input.GetMouseButtonDown(0))        {            handleTouch(Input.mousePosition);        }        else        {
            foreach (Touch touch in Input.touches)
            {                if (touch.phase == TouchPhase.Began)                {
                    handleTouch(touch.position);                }
            }        }	}    void handleTouch(Vector3 touchPos)    {        // translate from screen coordinates        touchPos = Camera.main.ScreenToWorldPoint(touchPos);        Tree tree = GetComponentAtPos<Tree>(touchPos, "Tree");        if (tree != null)        {            tree.DropSeeds();        }        else        {            CollectNutsAtPosition(touchPos);        }    }    void CollectNutsAtPosition(Vector2 position)    {        foreach (GameObject nut in GameObject.FindGameObjectsWithTag("Nut"))        {            if (Vector2.Distance(position, nut.transform.position) <= 150)            {                nut.GetComponent<Nut>().GoToNutPile();            }        }    }    public static T GetComponentAtPos<T>(Vector2 position, string layerName) where T:Component    {        T component = null;        // detect object at touch point        Collider2D collider = Physics2D.OverlapPoint(position, ~LayerMask.NameToLayer(layerName));        //print(System.Convert.ToString(~LayerMask.NameToLayer(layerName), 2) + ", " + layerName);        if (collider != null)        {            component = collider.GetComponent<T>();        }        return component;    }}